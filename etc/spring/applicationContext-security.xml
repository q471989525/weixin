<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- 不要拦截图片等静态资源，其中**代表可以跨越目录，*不可以跨越目录。  security=none可以理解为忽略-->
    <http pattern="/login.jsp*" security="none"/>
    <http pattern="/common/**" security="none"/>
    <!-- 不要过滤图片等静态资源 --> 
    <http pattern="/**/*.jpg" security="none"/>
    <http pattern="/**/*.png" security="none"/>
    <http pattern="/**/*.gif" security="none"/>
    <http pattern="/**/*.css" security="none"/>
    <http pattern="/**/*.js" security="none"/> 
    <http pattern="/**/*.swf" security="none"/> 
    <http pattern="/j_captcha.do*" security="none"/>
    <http pattern="/**/*.do" security="none"/>
	
    <!-- auto-config = true 则使用from-login. 如果不使用该属性 则默认为http-basic(没有session). 
    access-denied-page:出错后跳转到的错误页面; -->
    <http auto-config="true" access-denied-page="/common/403.jsp">
	
        <!-- login-page:默认指定的登录页面. authentication-failure-url:验证失败跳转页面. default-target-url:成功登陆后跳转页面 -->
        <form-login login-page="/login.jsp?login" authentication-failure-url="/login.jsp?failure" default-target-url="/index/authenticated.do" />
		
        <!-- logout-success-url:成功注销后跳转到的页面; -->
        <logout logout-success-url="/login.jsp?logout" />
		
        <http-basic />

        <!-- session-management是针对session的管理. 这里可以不配置. 如有需求可以配置. -->
        <!-- id登陆唯一. 后登陆的账号会挤掉第一次登陆的账号 error-if-maximum-exceeded="true" 禁止2次登陆; 
        session-fixation-protection="none" 防止伪造sessionid攻击. 用户登录成功后会销毁用户当前的session. 
        创建新的session,并把用户信息复制到新session中. expired-url : session过期跳转 -->
        <session-management invalid-session-url="/login.jsp?invalid">
            <concurrency-control expired-url="/login.jsp?expired" />
        </session-management>

        <!-- 增加一个filter，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="exFilter" />
    </http>
	
    <!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，我们的所有控制将在这三个类中实现，解释详见具体配置 -->
    <beans:bean id="exFilter" class="com.app.core.security3.MyFilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
        <beans:property name="securityMetadataSource" ref="securityMetadataSource" />
    </beans:bean>

    <!-- 权限管理操作 -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailService">
            <password-encoder hash="md5"/>
        </authentication-provider>
    </authentication-manager>

    <!-- 用户信息 -->
    <beans:bean id="userDetailService" class="com.app.core.security3.MyUserDetailService">
        <beans:property name="sysUserService" ref="sysuserservice"/>
        <beans:property name="sysOrganizationService" ref="sysorganizationservice"/>
    </beans:bean>
	
    <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
    <beans:bean id="accessDecisionManager" class="com.app.core.security3.MyAccessDecisionManager" />
	
    <!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
    <beans:bean id="securityMetadataSource" class="com.app.core.security3.MyInvocationSecurityMetadataSource" />

    <!-- 国际化 -->
    <beans:bean id="messageSource"
                    class="org.springframework.context.support.ResourceBundleMessageSource">
        <beans:property name="basenames">
            <beans:list>
                <beans:value>org.springframework.security.messages</beans:value>
                <beans:value>com.app.messages.messages</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
	
</beans:beans>