
package org.tempuri;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2014-12-22T10:14:54.238+08:00
 * Generated source version: 3.0.3
 * 
 */
public final class IHoYaVideoWCFService_BasicHttpBindingIHoYaVideoWCFService_Client {

    private static final QName SERVICE_NAME = new QName("http://tempuri.org/", "HoYaVideoWCFService");

    private IHoYaVideoWCFService_BasicHttpBindingIHoYaVideoWCFService_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = HoYaVideoWCFService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        HoYaVideoWCFService ss = new HoYaVideoWCFService(wsdlURL, SERVICE_NAME);
        IHoYaVideoWCFService port = ss.getBasicHttpBindingIHoYaVideoWCFService();  
        
        {
        System.out.println("Invoking getDevicesByRoad...");
        java.lang.Integer _getDevicesByRoad_roadId = null;
        org.datacontract.schemas._2004._07.hoyavideolib.JsonResponseOfArrayOfDeviceEntity9S24Wb1P _getDevicesByRoad__return = port.getDevicesByRoad(_getDevicesByRoad_roadId);
        System.out.println("getDevicesByRoad.result=" + _getDevicesByRoad__return);


        }
        {
        System.out.println("Invoking getDevices...");
        org.datacontract.schemas._2004._07.hoyavideolib.JsonResponseOfArrayOfDeviceEntity9S24Wb1P _getDevices__return = port.getDevices();
        System.out.println("getDevices.result=" + _getDevices__return);


        }
        {
        System.out.println("Invoking getRoad...");
        java.lang.Integer _getRoad_roadNo = null;
        org.datacontract.schemas._2004._07.hoyavideolib.JsonResponseOfRoadEntity9S24Wb1P _getRoad__return = port.getRoad(_getRoad_roadNo);
        System.out.println("getRoad.result=" + _getRoad__return);


        }
        {
        System.out.println("Invoking prevImage...");
        java.lang.Integer _prevImage_deviceId = null;
        java.lang.String _prevImage_imageName = "";
        java.lang.String _prevImage__return = port.prevImage(_prevImage_deviceId, _prevImage_imageName);
        System.out.println("prevImage.result=" + _prevImage__return);


        }
        {
        System.out.println("Invoking getDevice...");
        java.lang.Integer _getDevice_deviceId = null;
        org.datacontract.schemas._2004._07.hoyavideolib.JsonResponseOfDeviceEntity9S24Wb1P _getDevice__return = port.getDevice(_getDevice_deviceId);
        System.out.println("getDevice.result=" + _getDevice__return);


        }
        {
        System.out.println("Invoking getRoads...");
        org.datacontract.schemas._2004._07.hoyavideolib.JsonResponseOfArrayOfRoadEntity9S24Wb1P _getRoads__return = port.getRoads();
        System.out.println("getRoads.result=" + _getRoads__return);


        }
        {
        System.out.println("Invoking searchImage...");
        java.lang.Integer _searchImage_deviceId = null;
        javax.xml.datatype.XMLGregorianCalendar _searchImage_dtBegin = null;
        javax.xml.datatype.XMLGregorianCalendar _searchImage_dtEnd = null;
        org.datacontract.schemas._2004._07.hoyavideolib.ImageHistoryEntity _searchImage__return = port.searchImage(_searchImage_deviceId, _searchImage_dtBegin, _searchImage_dtEnd);
        System.out.println("searchImage.result=" + _searchImage__return);


        }
        {
        System.out.println("Invoking nextImage...");
        java.lang.Integer _nextImage_deviceId = null;
        java.lang.String _nextImage_imageName = "";
        java.lang.String _nextImage__return = port.nextImage(_nextImage_deviceId, _nextImage_imageName);
        System.out.println("nextImage.result=" + _nextImage__return);


        }

        System.exit(0);
    }

}
